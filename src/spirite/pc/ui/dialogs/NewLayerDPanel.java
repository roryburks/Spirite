package spirite.pc.ui.dialogs;

import java.awt.Color;
import java.awt.Font;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JSeparator;
import javax.swing.JTextField;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.SwingConstants;
import javax.swing.border.BevelBorder;
import javax.swing.border.Border;

import spirite.base.brains.MasterControl;
import spirite.base.brains.PaletteManager;
import spirite.base.image_data.ImageWorkspace;
import spirite.base.image_data.images.IInternalImage.InternalImageTypes;
import spirite.pc.ui.UIUtil.ClickAdapter;
import spirite.pc.ui.components.MTextFieldNumber;

public class NewLayerDPanel extends JPanel {
	public class NewLayerHelper {
		public final int width, height;
		public final Color color;
		public final String name;
		public final String type;
		public final InternalImageTypes imgType;
		private NewLayerHelper() {
			width = tfWidth.getInt();
			height = tfHeight.getInt();
			color = getValueColor();
			name = tfPartName.getText();
			type = tfPartType.getText();
			imgType = (InternalImageTypes) comboImgType.getSelectedItem();
		}
	}
	
	public NewLayerHelper getHelper() {
		return new NewLayerHelper();
	}
	
	private static final long serialVersionUID = 1L;
	private MTextFieldNumber tfWidth;
	private MTextFieldNumber tfHeight;
	private JTextField tfPartName;
	private JTextField tfPartType;
	private JComboBox<InternalImageTypes> comboImgType = new JComboBox<>(InternalImageTypes.values());
	private JLabel lblPartType;
	private JPanel colorPanelFG;
	private JPanel colorPanelBG;
	private JPanel colorPanelT;
	private JPanel colorPanelSelect;
	private JLabel lblColorFG;
	private JLabel lblColorBG;
	private JLabel lblColorT;
	private JLabel lblColorSelect;
	
	private Border b_selected;
	private Border b_unselected;
	private Font f_selected;
	private Font f_unselected;
	private Font f_selected2;
	private Font f_unselected2;
	private int selected;
	
	private Color custom_color = null;


	private final MasterControl master;
	public NewLayerDPanel( MasterControl master) {
		this.master = master;
		ImageWorkspace image = master.getCurrentWorkspace();

		b_selected = new BevelBorder(BevelBorder.RAISED, Color.BLACK, Color.WHITE, Color.WHITE, Color.BLACK);
		b_unselected = new BevelBorder(BevelBorder.LOWERED, null, null, null, null);

		f_selected = new Font("Tahoma", Font.BOLD, 10);
		f_unselected = new Font("Tahoma", Font.PLAIN, 10);
		f_selected2 = new Font("Tahoma", Font.BOLD, 12);
		f_unselected2 = new Font("Tahoma", Font.PLAIN, 12);

		
		initComponents();
		
		PaletteManager palette_manager = master.getPaletteManager();
		colorPanelFG.setBackground( new Color(palette_manager.getActiveColor(0),true));
		colorPanelBG.setBackground( new Color( palette_manager.getActiveColor(1),true));
		

		tfWidth.setMinMax(0, 16000);
		tfHeight.setMinMax(0, 16000);
		tfWidth.setText( Integer.toString(image.getWidth()));
		tfHeight.setText( Integer.toString(image.getHeight()));
		
		
		this.setSelected(2);
	}
	
	// :::: API
	public Color getValueColor() {
		if( selected == 0)
			return colorPanelFG.getBackground();
		if( selected == 1)
			return colorPanelBG.getBackground();
		if( selected == 2) 
			return new Color(0,0,0,0);
		if( selected == 3)
			return custom_color;
		
		return Color.BLACK;
	}
	
	public int getValueWidth() {
		return tfWidth.getInt();
	}
	public int getValueHeight() {
		return tfHeight.getInt();
	}
	public String getValueName() {
		return tfPartName.getText();
	}
	public String getValueType() {
		return tfPartType.getText();
	}
	
	// :::: Internal
	public void setSelected( int i) {
		if( i < 0 || i > 3) return;

		colorPanelFG.setBorder(b_unselected);
		colorPanelBG.setBorder(b_unselected);
		colorPanelT.setBorder(b_unselected);
		colorPanelSelect.setBorder(b_unselected);
		lblColorFG.setFont( f_unselected);
		lblColorBG.setFont( f_unselected);
		lblColorT.setFont( f_unselected);
		lblColorSelect.setFont( f_unselected2);
		
		if( i == 0 ) {
			colorPanelFG.setBorder(b_selected);
			lblColorFG.setFont( f_selected);
		}
		if( i == 1 ) {
			colorPanelBG.setBorder(b_selected);
			lblColorBG.setFont( f_selected);
		}
		if( i == 2 ) {
			colorPanelT.setBorder(b_selected);
			lblColorT.setFont( f_selected);
		}
		if( i == 3) {
			colorPanelSelect.setBorder(b_selected);
			lblColorSelect.setFont( f_selected2);
		}
		
		selected = i;
	}
	
	/**
	 * Mostly autogenerated code
	 */
	private void initComponents() {
		
		JLabel lblPartName = new JLabel("Layer Name:");
		
		tfPartName = new JTextField();
		tfPartName.setColumns(10);
		
		JLabel lblWidth = new JLabel("Width:");
		
		tfWidth = new MTextFieldNumber();
		tfWidth.setColumns(10);
		
		tfHeight = new MTextFieldNumber();
		tfHeight.setColumns(10);
		
		JLabel lblHeight = new JLabel("Height:");
		
		tfPartType = new JTextField();
		tfPartType.setColumns(10);
		
		lblPartType = new JLabel("Base Part:");
		
		JSeparator separator = new JSeparator();
		
		JLabel lblNewLabel = new JLabel("Create New Part");
		lblNewLabel.setFont(new Font("Tahoma", Font.BOLD, 12));
		
		JSeparator separator_2 = new JSeparator();
		
		JPanel panel_3 = new JPanel();
		
		lblColorFG = new JLabel("Foreground");
		lblColorFG.setFont(new Font("Tahoma", Font.PLAIN, 10));
		lblColorFG.addMouseListener(new ClickAdapter() {
			@Override
			public void mouseClicked(MouseEvent evt) {
				setSelected(0);
			}
		});
		lblColorBG = new JLabel("Background");
		lblColorBG.addMouseListener(new ClickAdapter() {
			@Override
			public void mouseClicked(MouseEvent e) {
				setSelected(1);
			}
		});
		lblColorBG.setFont(new Font("Tahoma", Font.PLAIN, 10));
		lblColorT = new JLabel("Transparent");
		lblColorT.addMouseListener(new ClickAdapter() {
			@Override
			public void mouseClicked(MouseEvent e) {
				setSelected(2);
			}
		});
		lblColorT.setFont(new Font("Tahoma", Font.PLAIN, 10));
		
		
		MouseAdapter selectMA = new ClickAdapter() {
			@Override
			public void mouseClicked(MouseEvent e) {
				if( selected == 3 || custom_color == null) {
					Color c = master.getDialogs().pickColor();
					
					if( c != null) {
						colorPanelSelect.setBackground(c);
						custom_color = c;
						setSelected(3);
					}
				}
				else 
					setSelected(3);
			}
		};
		
		lblColorSelect = new JLabel("Custom Color:");
		lblColorSelect.addMouseListener( selectMA);
		
		colorPanelSelect = new JPanel();
		colorPanelSelect.addMouseListener( selectMA);
		colorPanelSelect.setBorder(new BevelBorder(BevelBorder.LOWERED, null, null, null, null));
		
		JSeparator separator_1 = new JSeparator();
		
		JSeparator separator_4 = new JSeparator();
		
		JSeparator separator_3 = new JSeparator();
		separator_3.setOrientation(SwingConstants.VERTICAL);
		
		JLabel lblSelectBackgroundColor = new JLabel("Select Background Color:");
		GroupLayout groupLayout = new GroupLayout(this);
		groupLayout.setHorizontalGroup(
			groupLayout.createParallelGroup(Alignment.LEADING)
				.addGroup(groupLayout.createSequentialGroup()
					.addContainerGap()
					.addGroup(groupLayout.createParallelGroup(Alignment.TRAILING)
						.addGroup(groupLayout.createSequentialGroup()
							.addGroup(groupLayout.createParallelGroup(Alignment.LEADING)
								.addGroup(groupLayout.createSequentialGroup()
									.addComponent(comboImgType)
									.addPreferredGap(ComponentPlacement.RELATED, 163, Short.MAX_VALUE))
								.addGroup(groupLayout.createSequentialGroup()
									.addComponent(separator_2, GroupLayout.PREFERRED_SIZE, 263, Short.MAX_VALUE)
									.addGap(4))
								.addGroup(groupLayout.createSequentialGroup()
									.addGap(6)
									.addComponent(separator, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
									.addPreferredGap(ComponentPlacement.RELATED, 6, Short.MAX_VALUE)
									.addGroup(groupLayout.createParallelGroup(Alignment.LEADING)
										.addComponent(lblWidth)
										.addComponent(lblHeight))
									.addGap(18)
									.addGroup(groupLayout.createParallelGroup(Alignment.LEADING)
										.addComponent(tfHeight, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
										.addComponent(tfWidth, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
									.addGap(116)))
							.addGap(2))
						.addGroup(groupLayout.createSequentialGroup()
							.addGroup(groupLayout.createParallelGroup(Alignment.LEADING)
								.addComponent(lblPartName)
								.addComponent(lblPartType))
							.addGap(18)
							.addGroup(groupLayout.createParallelGroup(Alignment.LEADING, false)
								.addComponent(tfPartType)
								.addComponent(tfPartName, GroupLayout.PREFERRED_SIZE, 138, GroupLayout.PREFERRED_SIZE))
							.addContainerGap(47, Short.MAX_VALUE))
						.addGroup(groupLayout.createSequentialGroup()
							.addComponent(separator_1, GroupLayout.PREFERRED_SIZE, 248, GroupLayout.PREFERRED_SIZE)
							.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
						.addGroup(groupLayout.createSequentialGroup()
							.addComponent(separator_4, GroupLayout.DEFAULT_SIZE, 251, Short.MAX_VALUE)
							.addGap(18))
						.addGroup(groupLayout.createSequentialGroup()
							.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 67, GroupLayout.PREFERRED_SIZE)
							.addGroup(groupLayout.createParallelGroup(Alignment.LEADING)
								.addGroup(groupLayout.createSequentialGroup()
									.addGap(14)
									.addComponent(lblColorBG))
								.addGroup(groupLayout.createSequentialGroup()
									.addPreferredGap(ComponentPlacement.RELATED)
									.addComponent(lblColorFG))
								.addGroup(groupLayout.createSequentialGroup()
									.addGap(24)
									.addComponent(lblColorT)))
							.addGap(18)
							.addComponent(separator_3, GroupLayout.PREFERRED_SIZE, 4, GroupLayout.PREFERRED_SIZE)
							.addGap(7)
							.addGroup(groupLayout.createParallelGroup(Alignment.TRAILING)
								.addComponent(lblColorSelect)
								.addComponent(colorPanelSelect, GroupLayout.PREFERRED_SIZE, 20, GroupLayout.PREFERRED_SIZE))
							.addContainerGap(15, Short.MAX_VALUE))
						.addGroup(groupLayout.createSequentialGroup()
							.addComponent(lblSelectBackgroundColor)
							.addContainerGap(137, Short.MAX_VALUE))))
		);
		groupLayout.setVerticalGroup(
			groupLayout.createParallelGroup(Alignment.LEADING)
				.addGroup(groupLayout.createSequentialGroup()
					.addContainerGap()
					.addComponent(comboImgType)
					.addPreferredGap(ComponentPlacement.RELATED)
					.addComponent(separator_2, GroupLayout.PREFERRED_SIZE, 4, GroupLayout.PREFERRED_SIZE)
					.addPreferredGap(ComponentPlacement.RELATED)
					.addGroup(groupLayout.createParallelGroup(Alignment.BASELINE)
						.addComponent(lblPartName)
						.addComponent(tfPartName, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
					.addGap(2)
					.addGroup(groupLayout.createParallelGroup(Alignment.BASELINE)
						.addComponent(tfPartType, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
						.addComponent(lblPartType))
					.addPreferredGap(ComponentPlacement.RELATED)
					.addComponent(separator_1, GroupLayout.PREFERRED_SIZE, 4, GroupLayout.PREFERRED_SIZE)
					.addGroup(groupLayout.createParallelGroup(Alignment.LEADING)
						.addGroup(groupLayout.createSequentialGroup()
							.addGap(16)
							.addComponent(separator, GroupLayout.PREFERRED_SIZE, 4, GroupLayout.PREFERRED_SIZE))
						.addGroup(groupLayout.createSequentialGroup()
							.addPreferredGap(ComponentPlacement.UNRELATED)
							.addGroup(groupLayout.createParallelGroup(Alignment.BASELINE)
								.addComponent(lblWidth)
								.addComponent(tfWidth, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
							.addGap(2)
							.addGroup(groupLayout.createParallelGroup(Alignment.BASELINE)
								.addComponent(tfHeight, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
								.addComponent(lblHeight))))
					.addPreferredGap(ComponentPlacement.RELATED)
					.addComponent(separator_4, GroupLayout.PREFERRED_SIZE, 3, GroupLayout.PREFERRED_SIZE)
					.addGap(3)
					.addComponent(lblSelectBackgroundColor)
					.addPreferredGap(ComponentPlacement.UNRELATED)
					.addGroup(groupLayout.createParallelGroup(Alignment.LEADING)
						.addComponent(panel_3, GroupLayout.PREFERRED_SIZE, 43, GroupLayout.PREFERRED_SIZE)
						.addGroup(groupLayout.createSequentialGroup()
							.addComponent(lblColorFG)
							.addGap(1)
							.addComponent(lblColorBG)
							.addGap(1)
							.addComponent(lblColorT))
						.addGroup(groupLayout.createSequentialGroup()
							.addComponent(lblColorSelect)
							.addPreferredGap(ComponentPlacement.RELATED)
							.addComponent(colorPanelSelect, GroupLayout.PREFERRED_SIZE, 20, GroupLayout.PREFERRED_SIZE))
						.addComponent(separator_3, GroupLayout.PREFERRED_SIZE, 45, GroupLayout.PREFERRED_SIZE))
					.addGap(71))
		);
		
		colorPanelFG = new JPanel();
		colorPanelFG.addMouseListener(new ClickAdapter() {
			@Override
			public void mouseClicked(MouseEvent e) {
				setSelected(0);
			}
		});
		colorPanelBG = new JPanel();
		colorPanelBG.addMouseListener(new ClickAdapter() {
			@Override
			public void mouseClicked(MouseEvent e) {
				setSelected(1);
			}
		});
		colorPanelT = new JPanel();
		colorPanelT.addMouseListener(new ClickAdapter() {
			@Override
			public void mouseClicked(MouseEvent e) {
				setSelected(2);
			}
		});
		
		GroupLayout gl_panel_3 = new GroupLayout(panel_3);
		gl_panel_3.setHorizontalGroup(
			gl_panel_3.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel_3.createSequentialGroup()
					.addComponent(colorPanelFG, GroupLayout.PREFERRED_SIZE, 20, GroupLayout.PREFERRED_SIZE)
					.addGap(2)
					.addComponent(colorPanelBG, GroupLayout.PREFERRED_SIZE, 20, GroupLayout.PREFERRED_SIZE)
					.addGap(2)
					.addComponent(colorPanelT, GroupLayout.PREFERRED_SIZE, 20, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(11, Short.MAX_VALUE))
		);
		gl_panel_3.setVerticalGroup(
			gl_panel_3.createParallelGroup(Alignment.TRAILING)
				.addGroup(gl_panel_3.createSequentialGroup()
					.addGroup(gl_panel_3.createParallelGroup(Alignment.LEADING)
						.addComponent(colorPanelFG, GroupLayout.PREFERRED_SIZE, 20, GroupLayout.PREFERRED_SIZE)
						.addGroup(gl_panel_3.createSequentialGroup()
							.addGap(10)
							.addComponent(colorPanelBG, GroupLayout.PREFERRED_SIZE, 20, GroupLayout.PREFERRED_SIZE)))
					.addContainerGap(21, Short.MAX_VALUE))
				.addGroup(gl_panel_3.createSequentialGroup()
					.addGap(20)
					.addComponent(colorPanelT, GroupLayout.PREFERRED_SIZE, 20, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		panel_3.setLayout(gl_panel_3);
		setLayout(groupLayout);

	}

}
